1、Selenium Python bindings provides a simple API to write functional/acceptance tests using Selenium WebDriver. Through Selenium Python API you can access all functionalities of Selenium WebDriver in an intuitive way.
2、Selenium Python bindings provide a convenient API to access Selenium WebDrivers like Firefox, Ie, Chrome, Remote etc. The current supported Python versions are 3.5 and above.
3、This documentation explains Selenium 2 WebDriver API. Selenium 1 / Selenium RC API is not covered here.
4、Use pip to install the selenium package. Python 3.6 has pip available in the standard library. Using pip, you can install selenium like this:
5、You may consider using virtualenv to create isolated Python environments. Python 3 has venv which is almost the same as virtualenv.
6、You can also download Python bindings for Selenium from the PyPI page for selenium package. and install manually.
7、Now you can run your test scripts using Python. For example, if you have created a Selenium based script and saved it inside C:\my_selenium_script.py, you can run it like this:
8、Selenium is mostly used for writing test cases. The selenium package itself doesn’t provide a testing tool/framework. You can write test cases using Python’s unittest module. The other options for a tool/framework are pytest and nose.
9、In this chapter, we use unittest as the framework of choice. Here is the modified example which uses unittest module. This is a test for python.org search functionality: